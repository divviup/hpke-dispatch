searchState.loadedDescShard("hpke_dispatch", 0, "Hybrid public key encryption with algorithms dispatched at …\nAn iterable slice of <code>Aead</code> variants\nAead represents an authenticated encryption with …\nAES-128-GCM GCM\nAES-256-GCM GCM\nChaCha20Poly1305 RFC8439\nConfig is an open struct that contains an (<code>Aead</code>, <code>Kdf</code>, <code>Kem</code>) …\nDecapsulation failed\nDHKEM(P-256, HKDF-SHA256) NISTCurves\nDHKEM(P-384, HKDF-SHA384) NISTCurves\nDHKEM(P-521, HKDF-SHA512) NISTCurves\nEncapsulation failed\na simple struct to return the combined encapsulated key …\nDescribes things that can go wrong in the HPKE protocol\nA simple error type for failed id lookups\nAn input isn’t the right length. First value is the …\nA preshared key bundle was constructed incorrectly\nAn iterable slice of <code>Kdf</code> variants\nAn iterable slice of <code>Kem</code> variants\nKdf represents an key derivation function, as per …\nThe KDF was asked to output too many bytes\nKem represents an asymmetric key encapsulation mechanism, …\nAn encoded keypair\nThe allowed number of message encryptions has been reached\nAn error occurred while opening a ciphertext\nAn error occured while sealing a plaintext\nSha256 RFC5869\nSha384 RFC5869\nSha512 RFC5869\nAn invalid input value was encountered\nDHKEM(X25519, HKDF-SHA256) RFC7748\nthe authenticated encryption with additional data …\n<code>base_mode_open</code> provides an interface to …\nbase_mode_open provides an interface to …\n<code>base_mode_seal</code> provides an interface to …\nbase_mode_seal provides an interface to …\nthe ciphertext, encrypted with the key\nthe encapsulated encryption key\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ngenerate a Keypair for the provided asymmetric key …\ngenerate a <code>Keypair</code> for this <code>Kem</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ndeconstructs the pair into (private, public)\nreturns (encapsulated key, ciphertext)\nthe key derivation function to be used\nthe asymmetric key encapsulation mechanism to be used\ngenerate a keypair from a <code>Kem</code>\nthe private key for this keypair,\nthe public key for this keypair\nAttempt to convert three u16 ids into a valid config. The …")